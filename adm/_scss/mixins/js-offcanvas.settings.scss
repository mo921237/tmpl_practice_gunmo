//  ==========================================================================
//  Offcanvas Settings
//  ==========================================================================


$offcanvas-width: 17em !default;
$offcanvas-left-width: $offcanvas-width;
$offcanvas-right-width: $offcanvas-width;
$offset--left: 17em !default;
$offset--right: 17em !default;
$offset--top: 12.5em !default;
$offset--bottom: 12.5em !default;
$offcanvas-content-reveal-left-offset: $offset--left!default;
$offcanvas-content-reveal-right-offset: $offset--right!default;

//content
$offset-content-wrap--left: 17em !default;
$offset-content-wrap--right: $offset-content-wrap--left !default;

// position
$offcanvas-enable-left:    true !default;
$offcanvas-enable-right:   true !default;
$offcanvas-enable-top:   true !default;
$offcanvas-enable-bottom:   true !default;
// style
$offcanvas-enable-overlay:   true !default;
$offcanvas-enable-push:   true !default;
$offcanvas-enable-reveal:   true !default;

$supportCSSTransforms:   true !default;

$elements:  body-text,offcanvas-reveal,offcanvas-content-wrap,header,offcanvas-overlay,offcanvas,offcanvas-trigger,offcanvas-panel,offcanvas-btn;

// https://material.google.com/motion/duration-easing.html#duration-easing-common-durations
$deceleration-curve: cubic-bezier(0.0, 0.0, 0.2, 1); //Easing out
$acceleration-curve: cubic-bezier(0.4, 0.0, 1, 1); // Easing in
$sharp-curve: cubic-bezier(0.4, 0.0, 0.6, 1);
$standard-curve: cubic-bezier(0.4, 0.0, 0.2, 1);


//  ==========================================================================
//  Offcanvas Mixins
//  ==========================================================================

//GPU acceleration
%u-ha {
  transform: translate3d(0,0,0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
%u-offcanvas-animate {
  transition: transform 300ms $sharp-curve;
}

%is-open {
  transform: translate3d(0,0,0);
  visibility: visible;
}

@mixin offcanvas($position:left, $offset:$offcanvas-width, $overlay:false, $reveal:false) {
  @if $position == 'left' {
    width: $offcanvas-left-width;
    transform: translate3d(-$offset,0,0);

    @if ($supportCSSTransforms == false) {

      &.c-offcanvas--support-no-transitions {
        left: -$offset--left;
        &.is-open {
          left: 0;

        }

      }

    }
  }
  @if ($position == 'right') {
    width: $offcanvas-right-width;
    right: 0;
    transform: translate3d($offset,0,0);
  } @else if ($position == 'top') {
    left: 0;
    right: 0;
    top: 0;
    height:$offset;
    min-height: auto;
    width:100%;
    transform: translate3d(0,-$offset,0);
  } @else if ( $position == 'bottom' ) {
    top: auto;
    left: 0;
    right: 0;
    bottom: 0;
    height:$offset;
    min-height: auto;
    width:100%;
    transform: translate3d(0,$offset,0);
  }
}


@mixin offcanvas-content($position:left,$offset:$offcanvas-width, $reveal:true) {
  @if ($reveal == true) {
    @if ($position == 'right') {
      &.is-open {
        transform: translate3d(-$offset,0,0);
      }
    }
    @if ($position == 'left') {
      &.is-open {
        transform: translate3d($offset,0,0);
      }
    }

  }
}

@mixin offcanvas-bg($position:left, $offset:$offcanvas-width) {

  @if ($position == 'right') {
    &.is-open {
      transform: translate3d(-$offset,0,0);
    }
  }
  @if ($position == 'left') {
    &.is-open {
      transform: translate3d($offset,0,0);
    }
  }
}